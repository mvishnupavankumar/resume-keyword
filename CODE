"name":"resume keyword","nodes":[{"parameters":{"updates":["message"],"additionalFields":{}},"type":"n8n-nodes-base.telegramTrigger","typeVersion":1.2,"position":[-1840,-1040],"id":"cd79ef9a-115b-4e07-81e4-5a7ddd20bcd5","name":"Telegram Trigger","webhookId":"f260471f-4ca0-426e-8ac0-af08b37cedf4","credentials":{"telegramApi":{"id":"4oQnCRFo5hFP6kUO","name":" N8N TESTING"}}},{"parameters":{"resource":"file","fileId":"={{ $('Telegram Trigger').item.json.message?.photo ? $('Telegram Trigger').item.json.message.photo.at(-1).file_id : (['application/pdf','image/png','image/jpeg','image/jpg'].includes($('Telegram Trigger').item.json.message?.document?.mime_type) ? $('Telegram Trigger').item.json.message.document.file_id : '') }}"},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-752,-1040],"id":"b5027bbf-95fd-4194-bb7b-44f210d639c0","name":"Get a file1","webhookId":"07dbc4e8-1321-47c0-94a9-6d9830ff9993","credentials":{"telegramApi":{"id":"4oQnCRFo5hFP6kUO","name":" N8N TESTING"}}},{"parameters":{"assignments":{"assignments":[{"id":"df94fe94-2da2-4bd2-b251-4b12fe59958f","name":"url","value":"=https://api.telegram.org/file/botYOUR_TELEGRAM_BOT_TOKEN/{{$json.result.file_path}}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1856,-784],"id":"06d652dc-ca7e-43e8-be8e-e819deed3138","name":"Edit Fields1"},{"parameters":{"method":"POST","url":"https://api.mistral.ai/v1/ocr","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type\t","value":"application/json"},{"name":"Authorization\t","value":"Bearer YOUR_API_TOKEN"}]},"sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"model\": \"mistral-ocr-latest\",\n  \"include_image_base64\": true,\n  \"document\": {\n    \"type\": \"{{ $json.mime_type?.startsWith('image/') ? 'image_url' : 'document_url' }}\",\n    \"document_url\": \"{{ $json.url }}\"\n  }\n}\n","options":{"response":{"response":{"fullResponse":true,"neverError":true,"responseFormat":"json"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-1616,-784],"id":"10c20576-bbb7-4330-a315-f4b048b1b38c","name":"which ocr text reader get text from image"},{"parameters":{"jsCode":" const clean = text => text.replace(/[^a-zA-Z0-9\\s]/g, \"\").toLowerCase();\n\nlet resumeRaw = \"\";\nlet jobRaw = \"\";\n\n// Dynamically scan all keys to extract resume and job text\nfor (const key of Object.keys($json)) {\n  const lowerKey = key.toLowerCase();\n  const value = $json[key];\n\n  if (typeof value === \"string\") {\n    if (lowerKey.includes(\"resume\") || lowerKey === \"text\") {\n      resumeRaw = value;\n    } else if (lowerKey.includes(\"job\")) {\n      jobRaw = value;\n    }\n  }\n}\n\n// Fallbacks if nothing was found\nresumeRaw = resumeRaw || \"\";\njobRaw = jobRaw || \"\";\n\nreturn {\n  json: {\n    resumeText: clean(resumeRaw),\n    jobText: clean(jobRaw)\n  }\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1184,-784],"id":"2c5adde1-cba8-4c94-aa84-32041e4d5f18","name":"Code"},{"parameters":{"assignments":{"assignments":[{"id":"a9f334e7-d94f-4e50-b40a-0bbc39b8f6a4","name":"TEXT","value":"={{ $json.body.pages[0].markdown }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1408,-784],"id":"cae282f7-2d86-46de-b01e-0c38fb7ebcc8","name":"Edit Fields"},{"parameters":{"method":"POST","url":"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent","sendHeaders":true,"headerParameters":{"parameters":[{"name":"X-goog-api-key","value":"YOUR_GOOGLE_API_KEY"},{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"contents\": [\n    {\n      \"parts\": [\n        {\n          \"text\": \"Extract the most relevant keywords, skills, and technologies and intelligence seperate by commas  and  as a array from this resume:\\n\\n'{{ $json.resumeText }}\"\n        }\n      ]\n    }\n  ]\n}  ","options":{"response":{"response":{"fullResponse":true,"neverError":true,"responseFormat":"json"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-736,-784],"id":"175d293c-3faa-43e8-854f-9460d9a6c541","name":"HTTP Request"},{"parameters":{"jsCode":" return items.map(item => {\n  const raw = item.json.resumeText || '';\n  const cleaned = raw\n    .replace(/\\s+/g, ' ')       // Replace multiple spaces/newlines/tabs with a single space\n    .trim();                    // Remove starting/ending whitespace\n\n  return {\n    json: {\n      ...item.json,\n      resumeText: cleaned\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-960,-784],"id":"4e94c6b8-7d6b-4dcb-a979-e2bc714f2f58","name":"Code1"},{"parameters":{"assignments":{"assignments":[{"id":"f5ebf071-8d6c-42f5-ad67-3caaf2662db4","name":"description","value":"💼 IT Support Specialist / Computer Information Systems Intern – Job Description We are seeking a Computer Information Systems Intern or IT Support Specialist with a solid foundation in system administration, hardware/software troubleshooting, and technical support. The ideal candidate will bring hands-on experience, academic excellence, and a collaborative spirit to support enterprise technology operations and end-user computing.  📌 Responsibilities: Provide technical support for hardware/software issues, including installation, configuration, and troubleshooting  Maintain and administer Windows (19xx/20xx/XP/NT) and UNIX/Linux systems  Assist with the setup and management of local area networks (LAN), including Novell and Windows environments  Staff help desks, analyze reported problems, and resolve user issues efficiently  Contribute to web development projects for internal departmental sites  Support the maintenance of email and other web-based communication systems  Offer technical training and guidance on MS Office and other software tools to university students  📚 Requirements: Pursuing or completed a BS in Computer Information Systems – Web-based Networking  Strong GPA (3.86) and proven academic achievement as a Dean’s Scholar  Knowledge of SQL, PL/SQL, MS Access, and relational databases  Proficiency in Visual Basic, C, C++, Java, HTML, XML, ASP.NET  Experience with tools like MS Office Suite (Word, Excel, PowerPoint, Outlook) and MS Project  Prior internship or support experience in large-scale organizations preferred (e.g., Union Pacific Railroad)  Effective communication and teamwork abilities; demonstrated through student lab assistant and newsletter contributor roles  🎯 Preferred Attributes: Strong problem-solving and analytical skills  Excellent customer service mindset with attention to user needs  Ability to troubleshoot independently and collaboratively  Active involvement in college activities such as technical publications or athletics","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1616,-1040],"id":"6c55366c-9ded-4f0b-89c0-602c9e795227","name":"Edit Fields2"},{"parameters":{"jsCode":" const input = $json.DESCRIPTION || '';\n\nconst lower = input.toLowerCase();\nconst keywordIndex = lower.indexOf('keywords');\n\nif (keywordIndex === -1) {\n  throw new Error(\"No 'Keywords' section found.\");\n}\n\n// Get the text after 'keywords'\nconst afterKeywords = input.slice(keywordIndex + 'keywords'.length);\n\n// Remove markdown formatting, extra newlines, and special characters except commas\nconst cleanedText = afterKeywords\n  .replace(/[\\*\\n\\r]/g, ' ')        // remove *, newlines\n  .replace(/[^\\w\\s,]/g, '')         // remove all symbols except comma\n  .replace(/\\s+/g, ' ')             // normalize whitespace\n  .trim();\n\n// Split by commas, trim individual items, and remove duplicates\nconst uniqueKeywords = [...new Set(\n  cleanedText\n    .split(',')\n    .map(k => k.trim().toLowerCase())\n    .filter(k => k) // remove empty\n)];\n\nreturn [\n  {\n    json: {\n      resumewords: uniqueKeywords\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1632,-528],"id":"30fbde49-3b2f-4dd1-9c70-463f30bc006d","name":"Code3"},{"parameters":{"method":"POST","url":"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent","sendHeaders":true,"headerParameters":{"parameters":[{"name":"X-goog-api-key","value":"YOUR_GOOGLE_API_KEY"}]},"sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"contents\": [\n    {\n      \"parts\": [\n        {\n          \"text\": \"Extract the most relevant keywords, skills, and technologies and intelligence seperate by commas  and  as a array from this resume:\\n\\n'{{ $json.description }}\"\n        }\n      ]\n    }\n  ]\n}  ","options":{"response":{"response":{"fullResponse":true,"neverError":true,"responseFormat":"json"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-1392,-1040],"id":"9c904730-59e7-4796-bfdc-0b9d1000a609","name":"HTTP Request1"},{"parameters":{"assignments":{"assignments":[{"id":"09257202-f5d9-4a69-8406-41cfc1bc9684","name":"DESCRIPTION","value":"={{ $json.body.candidates[0].content.parts[0].text }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1184,-1040],"id":"d186c52b-8d13-45e0-b0e2-ab9bddbd1db5","name":"Edit Fields3"},{"parameters":{"jsCode":" // Get both keyword arrays\nconst resumeKeywords = $input.first().json.resumewords;\nconst descriptionKeywords = $('Code5').first().json.descriptionwords;\n\n// Normalize for comparison (lowercase and trimmed)\nconst normalizedResume = resumeKeywords.map(k => k.toLowerCase().trim());\nconst normalizedDescription = descriptionKeywords.map(k => k.toLowerCase().trim());\n\n// Check which description keywords are present in the resume\nconst comparisonResults = normalizedDescription.map((descKeyword, index) => {\n  const isPresent = normalizedResume.includes(descKeyword);\n  return {\n    keyword: descriptionKeywords[index], // original case\n    presentInResume: isPresent\n  };\n});\n\n// Prepare summary\nconst matched = comparisonResults.filter(item => item.presentInResume);\nconst missing = comparisonResults.filter(item => !item.presentInResume);\nconst matchPercentage = Math.round((matched.length / descriptionKeywords.length) * 100);\n\n// Rating\nlet rating = '';\nif (matchPercentage >= 80) rating = 'Excellent';\nelse if (matchPercentage >= 60) rating = 'Good';\nelse if (matchPercentage >= 40) rating = 'Average';\nelse rating = 'Poor';\n\nreturn [\n  {\n    json: {\n      matchPercentage: matchPercentage + '%',\n      matchRating: rating,\n      totalKeywordsInJobDescription: descriptionKeywords.length,\n      matchedKeywordsCount: matched.length,\n      unmatchedKeywordsCount: missing.length,\n      matchedKeywords: matched.map(k => k.keyword),\n      missingKeywords: missing.map(k => k.keyword),\n      fullComparisonReport: comparisonResults\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1408,-528],"id":"1ead1bfc-90a7-49af-b986-a056f9925325","name":"Code4"},{"parameters":{"jsCode":" const input = $json.DESCRIPTION;\n\n// Step 1: Remove markdown code block wrappers (```json and ```)\nconst cleanedJson = input\n  .replace(/```json\\s*/g, '')\n  .replace(/```/g, '')\n  .trim();\n\nlet parsed;\ntry {\n  parsed = JSON.parse(cleanedJson);\n} catch (e) {\n  throw new Error(\"Invalid JSON structure in DESCRIPTION\");\n}\n\n// Step 2: Flatten all nested array values into one array\nconst allValues = Object.values(parsed).flat();\n\n// Step 3: Clean and deduplicate\nconst uniqueKeywords = [...new Set(\n  allValues.map(item => item.toLowerCase().trim())\n)];\n\nreturn [\n  {\n    json: {\n      descriptionwords: uniqueKeywords\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-960,-1040],"id":"d7d06cba-e67c-42c6-a4d5-2fdc582e32c2","name":"Code5"},{"parameters":{"assignments":{"assignments":[{"id":"9140a9fa-0e7c-42e4-bec0-2397dedbead8","name":"DESCRIPTION","value":"={{ $json.body.candidates[0].content.parts[0].text }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1872,-528],"id":"6506287a-e197-452a-b65d-5c113e74ad2a","name":"Edit Fields4"},{"parameters":{"chatId":"7490692228","text":"=Match Report ✅ \n\n📊 Match Percentage: {{$json.matchPercentage}} \n\n⭐ Match Rating: {{$json.matchRating}} \n\n🧠 Total Keywords in JD: {{$json.totalKeywordsInJobDescription}} \n\n✅ Matched: {{$json.matchedKeywordsCount}}  \n\n❌ Unmatched: {{$json.unmatchedKeywordsCount}} \n\n✅ Matched Keywords: {{ $json.matchedKeywords.join(', ') }} \n\n❌ Missing Keywords: {{ $json.missingKeywords.join(', ') }}","additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-1152,-528],"id":"fa93bfd1-b362-4bde-b94c-df41d02d43b1","name":"Send a text message3","webhookId":"282a792f-92fd-49b9-85ce-9be0554a4d8b","credentials":{"telegramApi":{"id":"4oQnCRFo5hFP6kUO","name":" N8N TESTING"}}}],"pinData":{},"connections":{"Telegram Trigger":{"main":[[{"node":"Edit Fields2","type":"main","index":0}]]},"Get a file1":{"main":[[{"node":"Edit Fields1","type":"main","index":0}]]},"Edit Fields1":{"main":[[{"node":"which ocr text reader get text from image","type":"main","index":0}]]},"which ocr text reader get text from image":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Code1":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"Edit Fields4","type":"main","index":0}]]},"HTTP Request1":{"main":[[{"node":"Edit Fields3","type":"main","index":0}]]},"Edit Fields2":{"main":[[{"node":"HTTP Request1","type":"main","index":0}]]},"Code3":{"main":[[{"node":"Code4","type":"main","index":0}]]},"Edit Fields3":{"main":[[{"node":"Code5","type":"main","index":0}]]},"Code5":{"main":[[{"node":"Get a file1","type":"main","index":0}]]},"Edit Fields4":{"main":[[{"node":"Code3","type":"main","index":0}]]},"Code4":{"main":[[{"node":"Send a text message3","type":"main","index":0}]]}},"active":false,"settings":{"executionOrder":"v1"},"versionId":"6b11f887-6e02-4ed5-9661-a3f962be8ce7","meta":{"templateCredsSetupCompleted":true,"instanceId":"9c1ff5a25739643b1ce31e49c8cd10d95595e98968318c7409225186cfc48ddb"},"id":"u8wS4DikMeAXw7QM","tags":[]}